package com.example.departmentservice.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.departmenteservice.repository.DepartmentRepository;
import com.example.departmentservice.Dto.DepartmentDto;
import com.example.departmentservice.entity.Department;
import com.example.departmentservice.service.DepartmentService;

import lombok.AllArgsConstructor;

//@Service
//@AllArgsConstructor
//public class DepartmentServiceImpl implements DepartmentService {
//
//    private DepartmentRepository departmentRepository;
//
//
//	
//	@Override
//	public DepartmentDto saveDepartment(DepartmentDto departmentDto) {
//		
//		Department department = new Department(
//			departmentDto.getId(),
//			departmentDto.getDepartmentName(),
//			departmentDto.getDepartmentDescription(),
//			departmentDto.getDepartmentCode()
//			);	
//		Department savedDepartment = departmentRepository.save(department);
//		
//		DepartmentDto savedDepartmentDto = new DepartmentDto(
//				savedDepartment.getId(),
//				savedDepartment.getDepartmentName(),
//				savedDepartment.getDepartmentDescription(),
//				savedDepartment.getDepartmentCode()
//				);
//		
//		return savedDepartmentDto;
//	}
//
//	@Override
//	public DepartmentDto getDepartmentByCode(String departmentCode) {
//		Department department = departmentRepository.findByDepartmentCode(departmentCode);
//		DepartmentDto departmentDto = new DepartmentDto(
//				department.getId(),
//				department.getDepartmentName(),
//				department.getDepartmentDescription(),
//				department.getDepartmentCode()
//				);
//		return departmentDto;
//	}

@Service
@AllArgsConstructor
public class DepartmentServiceImpl implements DepartmentService {

    private DepartmentRepository departmentRepository;

    @Override
    public DepartmentDto saveDepartment(DepartmentDto departmentDto) {

        // convert department dto to department jpa entity
//        Department department = DepartmentMapper.mapToDepartment(departmentDto);

    	Department department = new Department(
    			departmentDto.getId(),
    			departmentDto.getDepartmentName(),
    			departmentDto.getDepartmentDescription(),
    			departmentDto.getDepartmentCode()
    			);	
        Department savedDepartment = departmentRepository.save(department);

//        DepartmentDto savedDepartmentDto = DepartmentMapper.mapToDepartmentDto(savedDepartment);

        DepartmentDto savedDepartmentDto = new DepartmentDto(
				savedDepartment.getId(),
				savedDepartment.getDepartmentName(),
				savedDepartment.getDepartmentDescription(),
				savedDepartment.getDepartmentCode()
				);
		
        
        return savedDepartmentDto;
    }

    @Override
    public DepartmentDto getDepartmentByCode(String departmentCode) {

        Department department = departmentRepository.findByDepartmentCode(departmentCode);

//        DepartmentDto departmentDto = DepartmentMapper.mapToDepartmentDto(department);

        DepartmentDto departmentDto = new DepartmentDto(
				department.getId(),
				department.getDepartmentName(),
				department.getDepartmentDescription(),
				department.getDepartmentCode()
				);
        return departmentDto;
    }
}

	

